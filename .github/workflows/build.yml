name: Build

on: [push, pull_request]

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python_version: ['3.9']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
          hatch env create
      - name: Lint and typecheck
        run: |
          hatch run lint:all
      - name: Run Tests
        run: |
          hatch run test:pytest --cov-report term --cov-report xml:coverage.xml --cov=cronspell
      - uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  release:
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://test.pypi.org/p/cronspell
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install hatch pre-commit
      - name: Build
        run: |
          hatch build
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
          repository-url: https://test.pypi.org/legacy

      # - name: Publish ðŸ“¦ to PyPI
      #   if: startsWith(github.ref, 'refs/heads/master')
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     user: __token__
      #     password: ${{ secrets.PYPI_SECRECT }}
      #     packages-dir: dist/
